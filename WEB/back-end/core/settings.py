"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
import dj_database_url
from google.oauth2 import service_account
from storages.backends.gcloud import GoogleCloudStorage




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'anothergenback.onrender.com',
    'hackathon-2025-six.vercel.app',
]

# Разрешить CORS для всех (НЕ использовать в продакшене!)
CORS_ALLOW_ALL_ORIGINS = True
# Правильная настройка для продакшена:
# CORS_ALLOWED_ORIGINS = [
#     "https://anothergenback.onrender.com",
#     "https://hackathon-2025-six.vercel.app",
# ]

CORS_ALLOW_CREDENTIALS = True
# Для защищённых запросов с куками/авторизацией:
# CSRF_TRUSTED_ORIGINS = [
#     "https://hackathon-2025-six.vercel.app",
# ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'djoser',
    'app',
    'storages'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {  
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT', default='5432'),
    }
}

VERTEX_PROJECT = config('VERTEX_PROJECT')
VERTEX_LOCATION = config('VERTEX_LOCATION')
VERTEX_BUCKET = config('VERTEX_BUCKET')
VERTEX_SERVICE_ACCOUNT_FILE = os.path.join(BASE_DIR, config('VERTEX_SERVICE_ACCOUNT_FILE'))


# DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
# GS_BUCKET_NAME = config('VERTEX_BUCKET')  # lecture-videos-bucket
# GS_PROJECT_ID = config("VERTEX_PROJECT")  # your-project-id
# GS_LOCATION = config("VERTEX_LOCATION")
# GS_FILE_OVERWRITE = False  # Prevent overwriting files with the same name
# GS_DEFAULT_ACL = 'publicRead'  # Make files publicly accessible
# MEDIA_URL = f'https://storage.googleapis.com/{GS_BUCKET_NAME}/'
# GOOGLE_APPLICATION_CREDENTIALS = os.path.join(BASE_DIR, config('VERTEX_SERVICE_ACCOUNT_FILE'))

GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    os.path.join(BASE_DIR, config('VERTEX_SERVICE_ACCOUNT_FILE'))
)
# DEFAULT_FILE_STORAGE = 'gcloud.GoogleCloudMediaFileStorage'
GS_PROJECT_ID = config("VERTEX_PROJECT")  # your-project-id
GS_BUCKET_NAME = config('VERTEX_BUCKET')  # lecture-videos-bucket
MEDIA_URL = f'https://storage.googleapis.com/{GS_BUCKET_NAME}/'

STORAGES = {
            "default": {
                "BACKEND": "storages.backends.gcloud.GoogleCloudStorage",
                "OPTIONS": {
                    "bucket_name": GS_BUCKET_NAME,
                    "credentials": GS_CREDENTIALS,
                },
            },
            "staticfiles": {
                "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
            },
            }
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'app.User'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

DJOSER = {
    'LOGIN_FIELD': 'email',
    'USER_CREATE_PASSWORD_RETYPE': False,
    'SERIALIZERS': {
        'user_create': 'app.serializers.UserCreateSerializer',
        'user': 'app.serializers.UserSerializer',
        'current_user': 'app.serializers.UserSerializer',
    },
    'ACTIVATION_URL': None,
    'SEND_ACTIVATION_EMAIL': False,
    'SEND_CONFIRMATION_EMAIL': False,
}

